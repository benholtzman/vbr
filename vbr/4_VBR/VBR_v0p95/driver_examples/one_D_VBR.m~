
%% initialize
  close all; clear
  addpath ../functions
  addpath ../params
  addpath ../
    
%% construct state variable fields    
   nz=50; 
   age0 = 110;   
   z = linspace(0,300,nz)*1e3; z= z';     
   to = age0 * 1e6 * 365 * 24 * 3600;
   
   
   sig_MPa =
   d = 0.01 * 1e6 * ones(size(z)); % microns
   
   ch2o = 0 * ones(size(z));
   ch2o(z<80000)=0;   
   chi = 0.5 * (1 + erf((z-20e3)/(15e3))); 
   
   
%  write method list   
   VBR.in.elastic.methods_list={'anharmonic';'poro_Takei';'Stixrude_LithgowBertelloni'}; 
   VBR.in.anelastic.methods_list={'eBurgers';'AndradePsP'}; 
   VBR.in.viscous.methods_list={'HK2003'; 'LH2012'};   
   
   
%  load in settings that you might want to overwrite
%  (each will be called internally if you don't call them here)
   
   VBR.in.elastic.anharmonic=Params_Elastic('anharmonic'); % unrelaxed elasticity 
   VBR.in.elastic.poro_Takei=Params_Elastic('poro_Takei'); % unrelaxed poro-elasticity    
   VBR.in.viscous.HK2003 = Params_Viscous('HK2003'); % viscous parameters 
   VBR.in.viscous.LH2012 = Params_Viscous('LH2012'); % viscous parameters 
   VBR.in.anelastic.eBurgers = Params_Anelastic('eBurgers'); % anelasticity   
   VBR.in.anelastic.AndradePsP = Params_Anelastic('AndradePsP'); % anelasticity
   VBR.in.anelastic.Andrade = Params_Anelastic('Andrade'); % anelasticity
   
%  state variables (SV)
   VBR.in.SV.T_K = 1400*erf(z./(2*sqrt(1e-6.*to))) + 273 + z/1e3 * 0.4;
   VBR.in.SV.P_GPa = z * 3300 * 9.8 /1e9;
   VBR.in.SV.sig_MPa = sig_MPa;
   VBR.in.SV.dg_um = 0.1 * ones(size(z)); 
   VBR.in.SV.phi = 0.001 * (z >= 80000);
   VBR.in.SV.Ch2o = 0 * (size(z)); % in PPM!   
   VBR.in.SV.rho = 3300 * ones(size(T_K)); % [Pa]
   VBR.in.SV.chi = chi; 
   VBR.in.SV.f = logspace(-2.2,-1.3,4);
   
%  call VBR    
   [VBR] = VBR_spine(VBR);  
     
%  check time in each
   disp(VBR.out.computation_time)
   
%  plot a cool thing   
   figure('color',[1 1 1])
   
   ela='elastic'; 
   GuNa='poro_Takei'; 
      
   subplot(2,3,1)
   Gu=VBR.out.(ela).(GuNa).Gu/1e9;
   stdG=VBR.out.(ela).(GuNa).sta_dev.Gu/1e9; 
   Ku=VBR.out.(ela).(GuNa).Ku/1e9;
   stdK=VBR.out.(ela).(GuNa).sta_dev.Ku/1e9; 
   
   plot(Gu,z/1e3,'k','linewidth',2,'displayname','mean')
   hold on
   plot(Gu+stdG/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')
   plot(Gu-stdG/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')
   plot(Gu+stdG,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   plot(Gu-stdG,z/1e3,'color',[0 0 0],'displayname','2-\sigma')      
   xlabel('G_u [GPa]'); ylabel('z [km]')
   
   subplot(2,3,2)
   plot(stdG/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')   
   hold on
   plot(stdG,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   xlabel('deviation [GPa]')
   
   subplot(2,3,3)
   plot(100*stdG/2./Gu,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')   
   hold on
   plot(100*stdG./Gu,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   xlabel('percent deviation (\sigma/G_u)')
   
   subplot(2,3,4)   
   plot(Ku,z/1e3,'k','linewidth',2,'displayname','mean')
   hold on
   plot(Ku+stdK/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')
   plot(Ku-stdK/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')
   plot(Ku+stdK,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   plot(Ku-stdK,z/1e3,'color',[0 0 0],'displayname','2-\sigma')      
   xlabel('K_u [GPa]'); ylabel('z [km]')
  
   subplot(2,3,5)
   plot(stdK/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')   
   hold on
   plot(stdK,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   xlabel('deviation [GPa]')
   
   subplot(2,3,6)
   plot(100*stdK/2./Ku,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')   
   hold on
   plot(100*stdK./Ku,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   xlabel('percent deviation (\sigma/K_u)')
   
   for ip = 1:6
       subplot(2,3,ip)
   legend('location','southeast')
   set(gca,'ydir','rev')
   end
   
%  plot a cool thing   
   figure('color',[1 1 1])
   subplot(2,3,1)
   thing=VBR.out.(ela).(GuNa).Vsu/1e3;
   std=VBR.out.(ela).(GuNa).sta_dev.Vsu/1e3; 
   plot(thing,z/1e3,'k','linewidth',2,'displayname','mean')
   hold on
   plot(thing+std/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')
   plot(thing-std/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')
   plot(thing+std,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   plot(thing-std,z/1e3,'color',[0 0 0],'displayname','2-\sigma')      
   xlabel('V_s^u [km/s]'); ylabel('z [km]')
   
   subplot(2,3,2)
   plot(std/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')   
   hold on
   plot(std,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   xlabel('deviation [km/s]')
   
   subplot(2,3,3)
   plot(100*std/2./thing,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')   
   hold on
   plot(100*std./thing,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   xlabel('percent deviation')
   
   subplot(2,3,4)
   thing=VBR.out.(ela).(GuNa).Vpu/1e3;
   std=VBR.out.(ela).(GuNa).sta_dev.Vpu/1e3;
   plot(thing,z/1e3,'k','linewidth',2,'displayname','mean')
   hold on
   plot(thing+std/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')
   plot(thing-std/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')
   plot(thing+std,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   plot(thing-std,z/1e3,'color',[0 0 0],'displayname','2-\sigma')      
   xlabel('V_p^u [km/s]'); ylabel('z [km]')
  
   subplot(2,3,5)
   plot(std/2,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')   
   hold on
   plot(std,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   xlabel('deviation [km/s]')
   
   subplot(2,3,6)
   plot(100*std/2./thing,z/1e3,'color',[0.5 0.5 0.5],'displayname','1-\sigma')   
   hold on
   plot(100*std./thing,z/1e3,'color',[0 0 0],'displayname','2-\sigma')
   xlabel('percent deviation')
   
   for ip = 1:6
       subplot(2,3,ip)
       legend('location','southeast')
       set(gca,'ydir','rev')
   end
   
   
   
clearvars -except VBR
